{"version":3,"sources":["components/ToDoListItem.js","actions/note.js","components/ToDoList.js","components/ToDo.js","reducer/noteReducer.js","index.js","store/ConfigureStore.js"],"names":["connect","text","id","dispatch","type","className","onChange","e","updates","editNote","target","value","console","log","length","onClick","deleteNote","state","notes","props","map","note","key","ToDoApp","onSubmit","preventDefault","noteText","includes","setState","error","uuidv4","addNote","onInputChange","this","autoFocus","placeholder","React","Component","noteReducerDefaultState","localStorage","getItem","JSON","parse","action","filter","store","createStore","noteReducer","subscribe","setItem","stringify","getState","jsx","ToDo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99656762.chunk.js","sourcesContent":["import React from \"react\";\nimport { editNote, deleteNote } from \"../actions/note\";\nimport { connect } from \"react-redux\";\n\n\n\nconst ToDoListItem = ({ text, id, dispatch }) => {\n\n    const onChange = (e) => {\n        dispatch(editNote(id, { text: e.target.value }))\n        console.log(e.target.value.length);\n    }\n\n\n    return (\n        <div >\n            <input type=\"checkbox\" />\n            <input\n                className=\"inputClass\"\n                onChange={onChange}\n                value={text}\n            />\n            <button\n                onClick={(e) => { dispatch(deleteNote(id)) }}  >\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default connect()(ToDoListItem);","import { v4 as uuidv4 } from 'uuid';\n\nexport const addNote = ({ text = \"\" } = {}) => ({\n    type: \"ADD\",\n    note: {\n        text,\n        id: uuidv4()\n    }\n})\n\nexport const deleteNote = (id) => ({\n    type: \"DELETE\",\n    id\n})\n\nexport const editNote = (id, updates) => ({\n    type: \"EDIT\",\n    id,\n    updates\n})","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ToDoListItem from \"./ToDoListItem\"\n\n\n\nconst ToDoList = (props) => (\n    <div>\n        {props.notes.map((note) => {\n            return <ToDoListItem key={note.id}{...note} />\n        })}\n    </div>\n)\n\n\nconst mapStateToProps = (state) => {\n    return {\n        notes: state\n    }\n}\n\nexport default connect(mapStateToProps)(ToDoList)","import React from \"react\";\nimport { addNote } from \"../actions/note\";\nimport ToDoList from \"../components/ToDoList\";\nimport { connect } from \"react-redux\";\n\nclass ToDoApp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            note: \"\",\n            error: \"\"\n        }\n    }\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const text = this.state.note;\n        const noteText = this.props.notes.map((note) => note.text);\n\n        if (!this.state.note) {\n            this.setState(() => ({ error: \"Blank item cannot be added\" }))\n        }\n\n        else if (noteText.includes(this.state.note)) {\n            this.setState(() => ({ error: \"This item already exists in To Do list\" }))\n        }\n\n        else {\n            this.props.dispatch(addNote({ text }));\n            this.setState(() => ({ note: \"\", error: \"\" }))\n        }\n    }\n\n    onInputChange = (e) => {\n        const note = e.target.value;\n        this.setState(() => ({ note }))\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form onSubmit={this.onSubmit}>\n                    <h2>ToDo Task App</h2>\n                    {this.state.error && <p className=\"error\">{this.state.error}</p>}\n                    <input autoFocus value={this.state.note} className=\"inputNewItem\" onChange={this.onInputChange} placeholder=\"Add your To do item\" />\n                    <button>Add Item</button>\n                </form>\n                <ToDoList />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        notes: state\n    }\n}\n\nexport default connect(mapStateToProps)(ToDoApp);\n","const persistedState = localStorage.getItem('reduxState')\n    ? JSON.parse(localStorage.getItem('reduxState'))\n    : []\n\n\nconst noteReducerDefaultState = persistedState;\n\nexport default ((state = noteReducerDefaultState, action) => {\n    switch (action.type) {\n        case \"ADD\":\n            return [...state, action.note]\n        case \"DELETE\":\n            return state.filter((note) => note.id !== action.id)\n        default:\n            return state\n\n        case \"EDIT\":\n            return state.map((note) => {\n                if (note.id === action.id) {\n                    return { ...note, ...action.updates }\n                } else\n                    return note;\n            })\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ToDoApp from \"./components/ToDo\";\nimport { Provider } from \"react-redux\";\nimport ConfigureStore from \"./store/ConfigureStore\";\nimport \"./style.css\"\n\nconst store = ConfigureStore();\n\n\nstore.subscribe(()=>{\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n    console.log(store.getState());\n  })\n\n\n\n\nconst jsx = (\n    <Provider store={store}>\n        <ToDoApp/>\n    </Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { createStore } from \"redux\";\nimport noteReducer from \"../reducer/noteReducer\"\n\n\n\n\nexport default () => {\n    const store = createStore(noteReducer);\n    return store;\n\n}\n"],"sourceRoot":""}